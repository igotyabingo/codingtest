def solution(n):
    # 원래 수를 2진수로 변환한다.
    n = bin(n)[2:]    
    if('0' not in n):
        # 1. n에 0이 포함되지 않은 경우: 1111 -> 10111 
        return int('10'+n[1:],2)
    else:
        # 2. n에 0이 포함되는 경우:
        if('01' in n):  # 0보다 낮은 자릿수에 1이 존재하는 경우: 가장 오른쪽에서 교환하고 그 오른쪽도 처리한다.
            print(n)
            k = n[::-1].index('10')
            n0, n1 = 0, 0
            if(k!=0):
                n0 = n[-k:].count('0')
                n1 = k - n0
            print(n[:-(k+2)]+'10'+'0'*n0+'1'*n1)
            return int(n[:-(k+2)]+'10'+'0'*n0+'1'*n1, 2)
            
        else:   # 0보다 낮은 자릿수의 1이 없는 경우: 자릿수를 하나 늘리고 끝쪽에 1을 몬다.
            k = n.count('1')
            return int('1'+'0'*(len(n)-k+1)+'1'*(k-1),2)